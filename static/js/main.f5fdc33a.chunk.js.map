{"version":3,"sources":["components/tile.js","components/gameboard.js","components/App.js","index.js"],"names":["Tile","col","this","props","actualLoc","row","id","index","className","onClick","React","Component","Gameboard","state","currentLocation","picture","start","bind","result","handleClick","locationCheck","swapTiles","count","newCurrent","subArr","indexArr","i","rows","j","columns","push","setState","originalLocation","console","log","newLocation","reverse","location","zeroRow","zeroCol","loc","zeroLoc","l1","l0","current","temp","zeroLocation","undefined","event","target","value","FormGroup","Label","for","Input","onChange","handleChange","type","name","FormText","color","map","rIndex","column","cIndex","key","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5fdc33a.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\n\nexport default class Tile extends React.Component {\n    render() {\n        \n        const col = this.props.col\n        const row = this.props.row\n        const actualLoc={row,col}\n        return (\n            <div \n                id={`${'tile'+this.props.index}`}\n                className={`${'tile'+this.props.index} border col-3 tile`}\n            onClick={()=>this.props.onClick(this.props.index, actualLoc)}>\n                {this.props.index}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Tile from './tile'\nimport { Button, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default class Gameboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentLocation: [],\n            // gameboardSize: this.props.rows * this.props.columns,\n            picture: \"\",\n        }\n        this.start = this.start.bind(this)\n        this.result = this.result.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.locationCheck = this.locationCheck.bind(this)\n        this.swapTiles = this.swapTiles.bind(this)\n    }\n\n\n    componentDidMount() {\n        let count = 0\n        let curr = [...this.state.currentLocation]\n        var newCurrent = []\n        var subArr = []\n        var indexArr = []\n        // build a 2D array, used as the boad of the game.\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.columns; j++) {\n                subArr.push(count)\n                count++\n            }\n            newCurrent.push(subArr)\n            subArr = []\n        }\n        count = 0\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.columns; j++) {\n                subArr.push(count)\n                count++\n            }\n            indexArr.push(subArr)\n            subArr = []\n            \n        }\n        // for (let i = 0; i < this.state.gameboardSize; i++){\n        //     newCurrent.push(i)\n        // }\n\n        this.setState({\n            originalLocation: indexArr,\n            currentLocation: newCurrent\n        })\n    }\n\n\n    start() {\n        console.log('in the start function')\n        var newLocation = this.state.currentLocation.reverse()\n        this.setState({\n            currentLocation: newLocation\n        })\n    }\n\n\n    result() {\n        console.log('in the result function')\n        this.setState({\n            // currentLocation: this.state.originalLocation\n        })\n    }\n\n\n    locationCheck(location, index) {\n        let check = false\n        let row = location.row\n        let col = location.col\n        // console.log({ col, row })\n        if (index !== 0) {\n            if (row < 3) {\n                // console.log('checking below')\n                if (this.state.currentLocation[row + 1][col] === 0) {\n                    // console.log('tile0')\n                    let zeroRow = (row + 1)\n                    let zeroCol = (col)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n            if (row > 0) {\n                // console.log('checking above')\n                if (this.state.currentLocation[row - 1][col] === 0) {\n                    // console.log('tile0')\n                    let zeroRow = (row - 1)\n                    let zeroCol = (col)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n                //     document.getElementById('tile' + (col + row + 4)).innerText === 0) {\n                //     console.log('tile0')\n                // }\n            }\n            if (col > 0) {\n                // console.log('checking to the left')\n                if (this.state.currentLocation[row][col - 1] === 0) {\n                    // console.log('tile0')\n                    let zeroRow = (row)\n                    let zeroCol = (col - 1)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n                //     document.getElementById('tile' + (col + 1 + row)).innerText === 0) {\n                //     console.log('tile0')\n                // }\n            }\n            if (col < 3) {\n                // console.log('checking to the right')\n                if (this.state.currentLocation[row][col + 1] === 0) {\n                    // console.log('tile0')\n                    let zeroRow = (row)\n                    let zeroCol = (col+1)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n        }\n\n    }\n    swapTiles(loc,zeroLoc) {\n        let l1 =loc\n        let l0 = zeroLoc\n        let current = [...this.state.currentLocation]\n        let temp = current[l1.row][l1.col]\n        current[l1.row][l1.col] = current[l0.zeroRow][l0.zeroCol]\n        current[l0.zeroRow][l0.zeroCol] = temp\n        // console.log(current)\n        this.setState({currentLocation: current})\n\n    }\n\n    handleClick(index, location) {\n        // console.log({ index, location })\n        let zeroLocation = this.locationCheck(location, index)\n        // console.log(zeroLocation)\n        if(zeroLocation !== undefined){\n            this.swapTiles(location,zeroLocation)\n        }\n    }\n\n\n    handleChange(event) {\n        this.setState({\n            picture: event.target.value\n        })\n        // console.log(event.target.value)\n    }\n\n\n    render() {\n        // console.log(this.state.currentLocation)\n        return (\n            <>\n                <div className='offset-4 col-4'>\n                    <FormGroup>\n                        <Label for=\"exampleFile\">File</Label>\n                        <Input className='btn btn-light' value={this.state.picture} onChange={event => this.handleChange(event)} type=\"file\" name=\"file\" id=\"exampleFile\" />\n                        <FormText color=\"muted\">\n                            Choose your own picture!\n                    </FormText>\n                    </FormGroup>\n                </div>\n                {/* single array\n                <div className='offset-1 col-10 row'>\n                    {this.state.currentLocation.map((item,index)=> \n                        <Tile index={index} onClick={this.handleClick} location={this.state.gameboardSize[index]} ol={item}/>\n                    )}\n                </div> */}\n                <div className='offset-1 col-10 row'>\n                    {this.state.currentLocation.map((row, rIndex) =>\n                        row.map((column, cIndex) =>\n                            <Tile onClick={this.handleClick} index={row, column} key={row, column} row={rIndex} col={cIndex} />))}\n                </div>\n                <div className='offset-2 col-8 pt-3 pb-5 d-flex justify-content-around'>\n                    <Button onClick={this.start}>Start</Button>\n                    <Button onClick={this.result}>Complete</Button>\n                </div>\n            </>\n        )\n    }\n}\n// {this.state.currentLocation.map((index)=> <Tile onClick={this.handleClick} currentLoc={this.state.currentLocation[index]} key={index} index={index}/> )}","import React from 'react';\nimport './App.css';\nimport Gameboard from './gameboard.js'\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      picture: '',\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className='col-12 text-center display-2'>Slide-Puzzle</h1>\n        <div className='row'>\n          <Gameboard rows={4} columns={4} />\n        </div>\n      </>\n    )\n  }\n}\n\n\n{/* <div className='offset-1 col-10 row'>\n    {this.state.currentLocation.map((row, rowIndex) =>\n      row.map((column, columnIndex) =>\n        <Tile onClick={this.handleClick} status={row, column} key={row, column} row={rowIndex} col={columnIndex} />))}\n  </div> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}