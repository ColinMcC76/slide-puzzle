{"version":3,"sources":["components/tile.js","components/gameboard.js","components/App.js","index.js"],"names":["Tile","num","this","props","index","col","actualLoc","row","x","myStyle","marginTop","Math","floor","width","marginLeft","id","className","onClick","style","src","picture","process","React","Component","Gameboard","state","originalLocation","currentLocation","win","start","bind","result","handleClick","locationCheck","swapTiles","checkWin","count","newCurrent","subArr","indexArr","localStorage","getItem","split","i","rows","j","columns","push","Number","setState","setItem","console","log","loc","zeroLoc","undefined","location","zeroRow","zeroCol","one","two","check","toString","current","temp","zeroLocation","event","target","value","alert","UncontrolledAlert","color","fade","FormGroup","Label","for","Input","onChange","handleChange","type","name","FormText","map","rIndex","column","cIndex","key","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f453b029.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\n\nexport default class Tile extends React.Component {\n    render() {\n\n        const num = this.props.index\n        const col = this.props.col\n        const row = this.props.row\n        const actualLoc = { row, col }\n        let x =num % 4\n        let y = Math.floor(num/this.props.width)\n        const imgY = y * -100\n        const imgX = x * -100\n        const myStyle = {\n            marginTop: imgY,\n            marginLeft: imgX\n        }\n        return (\n            <div\n                id={`${'tile' + this.props.index}`}\n                className='border col-3 tile'\n                onClick={() => this.props.onClick(this.props.index, actualLoc)}\n            >\n                <img style={myStyle} className='img' src={`${this.props.picture === '' ? process.env.PUBLIC_URL + '/dale.svg' : this.props.picture}`}></img>\n                {/* <img\n                style={myStyle}\n                className='img' src={process.env.PUBLIC_URL + '/Mars.jpg'}></img> */}\n                {this.props.index}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport Tile from './tile'\n\n\nimport { UncontrolledAlert, Button, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default class Gameboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            originalLocation: [],\n            currentLocation: [],\n            picture: \"\",\n            win: false\n        }\n        this.start = this.start.bind(this)\n        this.result = this.result.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.locationCheck = this.locationCheck.bind(this)\n        this.swapTiles = this.swapTiles.bind(this)\n        this.checkWin = this.checkWin.bind(this)\n    }\n\n    componentDidMount() {\n        let count = 0\n        var newCurrent = []\n        var subArr = []\n        var indexArr = []\n        let x\n        // checking for localStorage\n        if (localStorage.getItem('position') !== null) {\n            x = localStorage.getItem('position').split(',')\n            count = 0\n            for (let i = 0; i < this.props.rows; i++) {\n                for (let j = 0; j < this.props.columns; j++) {\n                    subArr.push(Number(x[count]))\n                    count++\n                }\n                newCurrent.push(subArr)\n                subArr = []\n            }\n        } else if (localStorage.getItem('position') === null) {\n            // build a 2D array, used as the board of the game.\n            for (let i = 0; i < this.props.rows; i++) {\n                for (let j = 0; j < this.props.columns; j++) {\n                    subArr.push(count)\n                    count++\n                }\n                newCurrent.push(subArr)\n                subArr = []\n            }\n            count = 0\n        }\n        // creating my win array\n        count = 0\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.columns; j++) {\n                subArr.push(count)\n                count++\n            }\n            indexArr.push(subArr)\n            subArr = []\n        }\n        this.setState({\n            originalLocation: indexArr,\n            currentLocation: newCurrent\n        })\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem('position', this.state.currentLocation)\n    }\n    // shuffle Function\n    start() {\n        console.log('in the start function')\n        // this.locationCheck()\n        for (var row = 0; row < this.props.rows; row++) {\n            for (var col = 0; col < this.props.columns; col++) {\n                let loc = { row, col }\n                // var zeroRow = Math.floor(Math.random() * this.props.rows);\n                // var zeroCol = Math.floor(Math.random() * this.props.columns);\n                // let zeroLoc = ({ zeroRow, zeroCol })\n                let zeroLoc = this.locationCheck(loc)\n                console.log({loc,zeroLoc})\n                if (zeroLoc !== undefined) {\n                    this.swapTiles(loc, zeroLoc);\n                }\n            }\n        }\n    }\n    // Complete the board\n    result() {\n        console.log('in the result function')\n        let count = 0\n        var subArr = []\n        var indexArr = []\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.columns; j++) {\n                subArr.push(count)\n                count++\n            }\n            indexArr.push(subArr)\n            subArr = []\n        }\n        this.setState({\n            currentLocation: this.state.originalLocation,\n            originalLocation: indexArr\n        })\n    }\n\n    locationCheck(location, index) {\n        let row = location.row\n        let col = location.col\n        // console.log({ col, row })\n        if (index !== 0) {\n            if (row < this.props.rows - 1) {\n                // console.log('checking below')\n                if (this.state.currentLocation[row + 1][col] === 0) {\n                    let zeroRow = (row + 1)\n                    let zeroCol = (col)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n            if (row > 0) {\n                // console.log('checking above')\n                if (this.state.currentLocation[row - 1][col] === 0) {\n                    let zeroRow = (row - 1)\n                    let zeroCol = (col)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n            if (col > 0) {\n                // console.log('checking to the left')\n                if (this.state.currentLocation[row][col - 1] === 0) {\n                    let zeroRow = (row)\n                    let zeroCol = (col - 1)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n            if (col < this.props.columns - 1) {\n                // console.log('checking to the right')\n                if (this.state.currentLocation[row][col + 1] === 0) {\n                    let zeroRow = (row)\n                    let zeroCol = (col + 1)\n                    let zeroLoc = ({ zeroRow, zeroCol })\n                    return zeroLoc\n                }\n            }\n        }\n\n    }\n    checkWin() {\n        let one = [...this.state.currentLocation]\n        let two = [...this.state.originalLocation]\n        let check = false\n        // console.log({one,two})\n        if (one.toString() === two.toString()) {\n            check = true\n        }\n        if (check === true) {\n            this.setState({\n                win: true\n            })\n        } else {\n            this.setState({\n                win: false\n            })\n        }\n\n\n    }\n    swapTiles(loc, zeroLoc) {\n        let current = [...this.state.currentLocation]\n        let temp = current[loc.row][loc.col]\n        current[loc.row][loc.col] = current[zeroLoc.zeroRow][zeroLoc.zeroCol]\n        current[zeroLoc.zeroRow][zeroLoc.zeroCol] = temp\n        // console.log(current)\n        this.setState({ currentLocation: current })\n    }\n\n    handleClick(index, location) {\n        // console.log({ index, location })\n        let zeroLocation = this.locationCheck(location, index)\n        // console.log(zeroLocation)\n        if (zeroLocation !== undefined) {\n            this.swapTiles(location, zeroLocation)\n            this.checkWin()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            picture: event.target.value\n        })\n        // console.log(event.target.value)\n    }\n\n    render() {\n        // console.log(this.state.currentLocation)\n        const alert = this.state.win ? <UncontrolledAlert className='hello' color=\"success\" fade={true}>Congrats you won!</UncontrolledAlert> : null\n\n        return (\n            <>\n                <div className='offset-4 col-4'>\n                    <FormGroup>\n                        <Label for=\"exampleFile\">File</Label>\n                        <Input className='btn btn-light' value={this.state.picture} onChange={event => this.handleChange(event)} type=\"file\" name=\"file\" id=\"exampleFile\" />\n                        <FormText color=\"muted\">\n                            Choose your own picture!\n                    </FormText>\n                    </FormGroup>\n                </div>\n                <div className='col-12 p-0 d-flex justify-content-around'>\n                    {alert}\n                </div>\n                <div className='d-flex justify-content-center container-fluid'>\n                    <div className='board row'>\n                        {this.state.currentLocation.map((row, rIndex) =>\n                            row.map((column, cIndex) =>\n                                <Tile width={this.props.columns} picture={this.state.picture} onClick={this.handleClick} index={row, column} key={row, column} row={rIndex} col={cIndex} />))}\n                    </div>\n                </div>\n                <div className='offset-2 col-8 pt-3 pb-5 d-flex justify-content-around'>\n                    <Button onClick={this.start}>Start</Button>\n                    <Button onClick={this.result}>Complete</Button>\n                </div>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Gameboard from './gameboard.js'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <h1 className='col-12 text-center display-3'>Slide-Puzzle</h1>\n        <div className='row'>\n          <Gameboard rows={4} columns={4} />\n        </div>\n      </>\n    )\n  }\n}\n\n\n{/* <div className='offset-1 col-10 row'>\n    {this.state.currentLocation.map((row, rowIndex) =>\n      row.map((column, columnIndex) =>\n        <Tile onClick={this.handleClick} status={row, column} key={row, column} row={rowIndex} col={columnIndex} />))}\n  </div> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}